
<MudDialog Style="height: 90vh; width: 90vw; overflow: hidden">
    <DialogContent  >
        <MudContainer Style="display: flex; flex-direction: column; gap : 10px;margin-bottom: 10px; margin-top:20px ">
            <div style="height: auto;display: flex; flex-direction: column; gap: 10px; width: 100%; align-items: center; justify-content: center; margin-bottom: 20px; ">

                <MudText Style="font-size: 20px; font-weight: bold;">NOTAS</MudText>
                <div Style="border: solid 1px red; height: 2px; width: 40px;"></div>
                <MudText  Align="Align.Center" Style="font-size: 12px; font-weight: bold; opacity: 0.7;">DID YOU KNOW THAT THERES A TUNNER UNDER OCEAN BLVD</MudText>




            </div>
        </MudContainer>
        
        <div style="overflow: auto; max-height: 60vh; " >
            <MudContainer Style="display: flex; flex-direction: column; gap : 10px; margin-bottom: 20px; ">
                <Calificaciones calificaciones="@calificaciones" promedio="@promedio"></Calificaciones>
            </MudContainer>
            <MudText Align="Align.Center" Style="font-size: 10px; font-weight: bold; margin-top: 20px; margin-bottom: 20px; opacity: 0.5;">•  •  •  •  •  •  •  •  •  •  •  •</MudText>

            <MudContainer style="@($"""background-color: {backgroundTitleColor}; display: flex; margin-bottom: 30px;  gap : 10px; justify-content: space-between; align-items: center; padding-left: 50px; padding-bottom: 20px;  padding-right: 50px;position: sticky; top: 0; z-index: 1;""")">
                <MudText Style="font-size: 15px; font-weight: bold" Align="Align.Center" Color="Color.Error">   NOTAS (@notas.Count())</MudText>

                <MudMenu ListClass="pa-0 mud-elevation-4" AnchorOrigin="Origin.BottomCenter" TransformOrigin="Origin.TopCenter" Size="Size.Small" Icon="@Icons.Material.Rounded.FilterList">
                                             
                                       
                    <MudPaper Outlined="true" style="padding: 10px; overflow: hidden;">

                                               
                            <MudMenuItem @onclick='()=>{filtro = "bueno";}' Style="border-radius: 10px;"><MudText Style="font-size: 10px;">Solo Buenas criticas</MudText></MudMenuItem>
                            <MudMenuItem @onclick='()=>{filtro = "malo";}' Style="border-radius: 10px;"><MudText Style="font-size: 10px;">Solo Malas Criticas</MudText></MudMenuItem>
                            <MudMenuItem  @onclick='()=>{filtro = "neutro";}' Style="border-radius: 10px;"><MudText Style="font-size: 10px;">Solo Criticas Neutrales</MudText></MudMenuItem>

                            <MudDivider></MudDivider>
                            <MudMenuItem  @onclick='()=>{filtro = "todo";}' Style="border-radius: 10px;"><MudText Style="font-size: 10px;  opacity: 0.7;">Todas las Criticas</MudText></MudMenuItem>


                                            
                    </MudPaper>
                                    
                                        
                                       

                </MudMenu>

            </MudContainer>
           
            <MudContainer>
                <MudGrid>

                    @if(filtro == "todo")
                    {
                        <Virtualize Items="notas.OrderBy(n => n.Fecha_Creacion).ToList()" TItem="NotaResponse">
                              @if (context.Creador?.Id == usuarioactual.Id)
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" ReportButton=false nota="@context" deletebuttonvisible=true calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" nota="@context" calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                        </Virtualize>
                       
                          



                        
                    }
                    else if(filtro == "malo")
                    {
                        <Virtualize Items="notas.Where(n => calificaciones.Any(c => c.Usuario!.Id == n.Creador!.Id && c.Numero <= 3 && c.Numero >= 1)).OrderBy(n => n.Fecha_Creacion).ToList()" TItem="NotaResponse">
                            @if (context.Creador?.Id == usuarioactual.Id)
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" ReportButton=false nota="@context" deletebuttonvisible=true calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" nota="@context" calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                        </Virtualize>

                    }
                    else if (filtro == "neutro")
                    {
                        <Virtualize Items="notas.Where(n => calificaciones.Any(c => c.Usuario!.Id == n.Creador!.Id && c.Numero <= 6 && c.Numero >= 4)).OrderBy(n => n.Fecha_Creacion).ToList()" TItem="NotaResponse">
                            @if (context.Creador?.Id == usuarioactual.Id)
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" ReportButton=false nota="@context" deletebuttonvisible=true calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" nota="@context" calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                        </Virtualize>

                    }
                    else
                    {
                        
                        <Virtualize Items="notas.Where(n => calificaciones.Any(c => c.Usuario!.Id == n.Creador!.Id && c.Numero <= 10 && c.Numero >= 7)).OrderBy(n => n.Fecha_Creacion).ToList()" TItem="NotaResponse">
                            @if (context.Creador?.Id == usuarioactual.Id)
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" ReportButton=false nota="@context" deletebuttonvisible=true calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                            else
                            {
                                <MudItem md="12" lg="12" xl="12" xxl="12" sm="12" xs="12">
                                    <Nota usuarioactual="@usuarioactual" nota="@context" calificacion="@calificaciones.FirstOrDefault(c => c.Usuario?.Id == context.Creador?.Id)"></Nota>
                                </MudItem>
                            }
                        </Virtualize>

                                           
                    }

                </MudGrid>
            </MudContainer>
        </div>
        
        
    </DialogContent>
</MudDialog>

@code {

    [Parameter]

    public MudDialogInstance MudDialog { get; set; } 


    [Parameter] public List<CalificacionResponse> calificaciones { get; set; } = new List<CalificacionResponse>();
    [Parameter] public List<NotaResponse> notas { get; set; } = new List<NotaResponse>();
    [Parameter] public double promedio { get; set; }
    [Parameter] public UsuarioResponse usuarioactual { get; set; } = new UsuarioResponse();
    public string backgroundTitleColor => (theme.IsDark() ? "#191919" : "#F5F7F8");
    public string filtro = "todo";

}
